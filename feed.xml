<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://hayeon17kim.github.io//</id><title>하연</title><subtitle>개발을 하면서 배우고 느낀 것을 기록합니다.</subtitle> <updated>2021-07-20T17:24:37+08:00</updated> <author> <name>hayeon_kim</name> <uri>https://hayeon17kim.github.io//</uri> </author><link rel="self" type="application/atom+xml" href="https://hayeon17kim.github.io//feed.xml"/><link rel="alternate" type="text/html" hreflang="kr-KR" href="https://hayeon17kim.github.io//"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 hayeon_kim </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>System Design: Capacity Estimate</title><link href="https://hayeon17kim.github.io//posts/system-deisign-capacity-estimation/" rel="alternate" type="text/html" title="System Design: Capacity Estimate" /><published>2021-07-10T00:00:00+08:00</published> <updated>2021-07-20T17:24:12+08:00</updated> <id>https://hayeon17kim.github.io//posts/system-deisign-capacity-estimation/</id> <content src="https://hayeon17kim.github.io//posts/system-deisign-capacity-estimation/" /> <author> <name>hayeon_kim</name> </author> <category term="system-design" /> <summary> Capacity Estimation Capacity 8 bits = 1 byte 1024 bytes = 1 kb 1024 kb = 1 mb char = 1 byte int = 4 byte timestamp = 4 bytes Time 60 x 60 = 3,600s (hour) 3600 x 24 = 86,400s (day) 86,400s x 30 = 2,500,000s (month) CPU와 메모리 속도(절대시간, CPU cycle 대비 상대시간) | type | time | sec | |———–|——-|———-| | CPU cycle | 3ns | 1s | | RAM | 120ns | 6m ... </summary> </entry> <entry><title>주니어 성장일기: 2021.04.27</title><link href="https://hayeon17kim.github.io//posts/today-i-learned-2021-04-27/" rel="alternate" type="text/html" title="주니어 성장일기: 2021.04.27" /><published>2021-04-27T00:00:00+08:00</published> <updated>2021-04-30T23:03:49+08:00</updated> <id>https://hayeon17kim.github.io//posts/today-i-learned-2021-04-27/</id> <content src="https://hayeon17kim.github.io//posts/today-i-learned-2021-04-27/" /> <author> <name>hayeon_kim</name> </author> <category term="TIL" /> <summary> API Secret Manager 애플리케이션, 서비스, IT 리소스에 액세스할 때 필요한 정보를 보호하기 위해 사용한다. 이와 같은 정보를 하드코딩된 상태로 사용하지 않게 해준다. 리소스의 보안 정보 교체를 중앙에서 할 수 있다. Spring Cloud와 AWS Secret Manager: Spring Cloud는 bootstrap.yml(or properties)에서 설정을 로드하게 된다. 스프링 클라우드에서 부트스트랩 컨텍스트를 스프링 컨텍스트의 부모로 먼저 생성되므로 application.yml에서 설정을 로드하게 된다. 부트스트랩 컨텍스트는 외부 구성을 찾아 기존 애플리케이션 컨텍스트와는 다르게 convention을 적용하고, 외... </summary> </entry> <entry><title>주니어 성장일기: 2021.04.26</title><link href="https://hayeon17kim.github.io//posts/today-i-learned-2021-04-26/" rel="alternate" type="text/html" title="주니어 성장일기: 2021.04.26" /><published>2021-04-26T00:00:00+08:00</published> <updated>2021-04-29T12:31:31+08:00</updated> <id>https://hayeon17kim.github.io//posts/today-i-learned-2021-04-26/</id> <content src="https://hayeon17kim.github.io//posts/today-i-learned-2021-04-26/" /> <author> <name>hayeon_kim</name> </author> <category term="TIL" /> <summary> 첫 배포한 날 첫 작업을 운영 서버에 배포하였다. 아직은 git 이해가 미숙해서 운영 서버에 배포하기까지 실수가 잦았다. 로드밸런서의 종류 클래식 로드 밸런스(ELB) 레이어 4계층에서 작동 하드웨어 영역으로 데이터를 변경할 수 없다. 서버의 기본 주소가 바뀌면 로드 밸런서를 새로 생성해야 하며, 하나의 주소에 하나의 대상 그룹으로 보내게 된다. 따라서 서버의 구성이 비대해지고 마이클 아키텍처를 구성하기가 어렵다. ex) 회원 모듈을 처리하는 인스턴스와 상품 모듈을 처리하는 인스턴스가 따로 존재한다면 2개의 로드밸런서가 필요하... </summary> </entry> <entry><title>BFS, DFS</title><link href="https://hayeon17kim.github.io//posts/fastcampus-algorithms-01/" rel="alternate" type="text/html" title="BFS, DFS" /><published>2021-04-26T00:00:00+08:00</published> <updated>2021-04-26T00:00:00+08:00</updated> <id>https://hayeon17kim.github.io//posts/fastcampus-algorithms-01/</id> <content src="https://hayeon17kim.github.io//posts/fastcampus-algorithms-01/" /> <author> <name>hayeon_kim</name> </author> <category term="algorithms" /> <summary> 파이썬으로 그래프를 표현하는 방법 파이썬에서 제공하는 딕셔너리와 리스트 자료 구조를 활용해서 그래프를 표현할 수 있음 graph = dict() graph['A'] = ['B', 'C'] graph['B'] = ['A', 'D'] graph['C'] = ['A', 'G', 'H', 'I'] graph['D'] = ['B', 'E', 'F'] graph['E'] = ['D'] graph['F'] = ['D'] graph['G'] = ['C'] graph['H'] = ['C'] graph['I'] = ['C', 'J'] graph['J'] = ['I'] {'A': ['B', 'C'], 'B': ['A', 'D'], 'C': ['A', 'G', 'H', 'I'], 'D': ['B', 'E'... </summary> </entry> <entry><title>주니어 성장일기: 2021.04.25</title><link href="https://hayeon17kim.github.io//posts/today-i-learned-2021-04-25/" rel="alternate" type="text/html" title="주니어 성장일기: 2021.04.25" /><published>2021-04-25T00:00:00+08:00</published> <updated>2021-04-27T00:56:04+08:00</updated> <id>https://hayeon17kim.github.io//posts/today-i-learned-2021-04-25/</id> <content src="https://hayeon17kim.github.io//posts/today-i-learned-2021-04-25/" /> <author> <name>hayeon_kim</name> </author> <category term="TIL" /> <summary> 오늘은 Catchoo 프로젝트 회의와 ZeroJS 팀D의 스터디가 있는 날이었다. 한 일 🐈 Catchoo 프로젝트 일주일 회고와 회의 회고 프론트엔드팀 (현섭, 해리) 진행상황 공유 리액트 컴포넌트 스타일링 방식 변경: Module CSS → Styled Component 통계 화면 구현 일반 회원가입과 로그인 기능 보완 변경된 API에 따라 고양이 관리 기능 변경 게시판 이미지 첨부: 이미지를 crop해주는 라이브러리를 적용 서버에게 요청을 보낼 때는 게시글 내용과 복수의 이미지까지 하나의 Form안에 넣어 보낼 것이다. 문제점 소셜 회원가입 / 로그인 시 500에러가 난다. ⇒ 백엔드 팀에서 확인 필요 Chr... </summary> </entry> </feed>
